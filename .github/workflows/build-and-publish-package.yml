name: Build and publish package

on:
  push:
    tags:
    - "*.v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main

    - name: Set TAGNAME variable from tag
      run: echo "TAGNAME=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
    - name: Set PROJECT_NAME variable from tag
      run: echo "PROJECT_NAME=${TAGNAME%%.v*}" >> $GITHUB_ENV
    - name: Set PROJECT_FOLDER variable from tag
      run: echo "PROJECT_FOLDER=./CustomPackages.${PROJECT_NAME}" >> $GITHUB_ENV
    - name: Set VERSION variable from tag
      run: echo "VERSION=${TAGNAME##*.v}" >> $GITHUB_ENV

    - name: Set Project Properties
      run: |
        properties=(
          "Version=${VERSION}"
          "PackageId=Krolebord.CustomPackages.${PROJECT_NAME}"
          "Authors=Krolebord"
          "Company=Krolebord"
          "EnablePackageValidation=true"
          "RepositoryType=git"
          "RepositoryUrl=https://github.com/krolebord/CustomPackages"
        );
        joinedProperties=""
        for prop in ${properties[@]}
        do
          joinedProperties="${joinedProperties}-p:${prop} "
        done
        echo "PROPERTIES=${joinedProperties}" >> $GITHUB_ENV

    - name: Build
      run: dotnet build --configuration Release ${{ env.PROPERTIES }}
      working-directory: ${{ env.PROJECT_FOLDER }}
    - name: Test
      run: dotnet test --configuration Release ${{ env.PROPERTIES }} --no-build
      working-directory: ${{ env.PROJECT_FOLDER }}
    - name: Pack
      run: dotnet pack --configuration Release ${{ env.PROPERTIES }} --no-build --output .
      working-directory: ${{ env.PROJECT_FOLDER }}
    - name: Push
      run: dotnet nuget push **/*.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_GITHUB_TOKEN}
      working-directory: ${{ env.PROJECT_FOLDER }}
      env:
        NUGET_GITHUB_TOKEN: ${{ secrets.NUGET_GITHUB_TOKEN }}
